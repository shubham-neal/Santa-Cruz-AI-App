# This pipeline builds a zip for mariner-deployment and publishes this zip as an artifact.

# CI Enabled
trigger:
  batch: true
  branches:
    include:
    - releases/*
    - master/*

# Trigger build only for changes in specific folders
trigger:
  batch: true
  paths:
    include:
    - edge-solution/people-detection/mariner
    - pipelines/build-Mariner.yml
    - pipelines/deploy-Mariner.yml


pool:
  default

stages:
- stage: PublishArtifacts
  jobs:
  - job: 'Download_and_bundle'
    steps:
    - checkout: self
      path: s/UnifiedEdge
    - download: none

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: '1ab7de3c-f8b7-4b59-be5a-fa78b4f4570c'
        definition: '6'
        buildVersionToDownload: 'latest'
        artifactName: 'ues_app'
        targetPath: '$(Pipeline.Workspace)'
    

    # Copy all the required files for deployment to a folder
    - task: CopyFiles@2
      displayName: 'Copy Files to a combined folder'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          README.md
          edge-solution/people-detection/mariner/templates/custom-role.json
          edge-solution/people-detection/mariner/templates/resources.json
          edge-solution/people-detection/mariner/templates/webapp.json
          edge-solution/people-detection/mariner/.env
          edge-solution/people-detection/mariner/cvr-topology-params.json
          edge-solution/people-detection/mariner/cvr-topology.json
          edge-solution/people-detection/mariner/deployment.lvaedge.template.json
          edge-solution/people-detection/mariner/video/staircase.mkv
        TargetFolder: '$(System.DefaultWorkingDirectory)/combined'
        flattenFolders: true


    - task: Bash@3
      displayName: 'ShellCheck validation'
      inputs:
        targetType: 'inline'
        script: |
          
          IS_SHELLCHECK_INSTALLED=$(apt list --installed | grep -c -w shellcheck)
          if [ "$IS_SHELLCHECK_INSTALLED" -eq 0 ]; then
              echo "Installing shellcheck"
              sudo apt-get install shellcheck
              echo "Installed shellcheck"
          fi
          
          # Change directory location to combined folder
          cd '$(System.DefaultWorkingDirectory)/combined'
          
          # Run shellcheck, Shellcheck will return a list of warnings if the script is not complient with all the rules
          # We are checking the the result returned by shellcheck.
          SHELL_CHECK_RESULT_SETUP=$(shellcheck --exclude SC1090,SC2034 ./mariner-setup.sh -x)

          if [ -z "$SHELL_CHECK_RESULT_SETUP" ]; then
              echo "Pass: There are no warnings from shellcheck"
          else
              if [ ! -z "$SHELL_CHECK_RESULT_SETUP" ]; then
              echo "The following are the warnings for mariner-setup script"
              echo "$SHELL_CHECK_RESULT_SETUP"
              fi
              exit 1
          fi
      
    # Creating the deployment bundle zip from combined folder
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/combined'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/deployment-bundle-mariner.zip'
        replaceExistingArchive: true

    # Publishing the pipeline artifact
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/deployment-bundle-mariner.zip'
        artifact: 'deployment-bundle-mariner'
        publishLocation: 'pipeline'

    # Publishing the pipeline artifact
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/people-detection-app.zip'
        artifact: 'people-detection-app'
        publishLocation: 'pipeline'

    # Publishing the pipeline artifact
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/edge-solution/people-detection/mariner/scripts/mariner-setup.sh'
        artifact: 'Mariner-Setup-Script'
        publishLocation: 'pipeline'    

